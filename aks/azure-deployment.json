{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "aks-vnet",
      "metadata": {
        "description": "Name of new or existing vnet to which Azure Route Server should be deployed."
      }
    },
    "vnetIpPrefix": {
      "type": "string",
      "defaultValue": "10.224.0.0/12",
      "metadata": {
        "description": "IP prefix for available addresses in vnet address space."
      }
    },
    "routeServerSubnetIpPrefix": {
      "type": "string",
      "defaultValue": "10.225.0.0/27",
      "metadata": {
        "description": "Route Server subnet IP prefix MUST be within vnet IP prefix address space."
      }
    },
    "peerAsn": {
      "type": "int",
      "defaultValue": 65002,
      "metadata": {
        "description": "Peer ASN connecting to."
      }
    },
    "targetVnetIpPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "IP prefix for available addresses in vnet address space."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "ipconfigName": "ipconfig1",
    "routeServerName": "vnet-routeserver",
    "routeServerSubnet": "RouteServerSubnet",
    "targetVnetName": "[format('{0}-remote', parameters('vnetName'))]",
    "targetVM": "external-workload",
    "targetVMNsg": "[format('{0}-nsg', variables('targetVM'))]",
    "targetVMNic": "[format('{0}-nic', variables('targetVM'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/{1}', parameters('vnetName'), variables('routeServerSubnet'))]",
      "properties": {
        "addressPrefix": "[parameters('routeServerSubnetIpPrefix')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}-publicip', variables('routeServerName'))]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/virtualHubs",
      "apiVersion": "2020-06-01",
      "name": "[variables('routeServerName')]",
      "location": "[variables('location')]",
      "properties": {
        "sku": "Standard"
      }
    },
    {
      "type": "Microsoft.Network/virtualHubs/ipConfigurations",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', variables('routeServerName'), variables('ipconfigName'))]",
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('routeServerSubnet'))]"
        },
        "publicIPAddress": {
          "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicip', variables('routeServerName')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', variables('routeServerName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicip', variables('routeServerName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('routeServerSubnet'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/bgpConnections",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/calico-rr1', variables('routeServerName'))]",
      "properties": {
        "peerAsn": "[parameters('peerAsn')]",
        "peerIp": "10.224.0.4"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', variables('routeServerName'))]",
        "[resourceId('Microsoft.Network/virtualHubs/ipConfigurations', variables('routeServerName'), variables('ipconfigName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/bgpConnections",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/calico-rr2', variables('routeServerName'))]",
      "properties": {
        "peerAsn": "[parameters('peerAsn')]",
        "peerIp": "10.224.0.5"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', variables('routeServerName'))]",
        "[resourceId('Microsoft.Network/virtualHubs/ipConfigurations', variables('routeServerName'), variables('ipconfigName'))]",
        "[resourceId('Microsoft.Network/virtualHubs/bgpConnections', variables('routeServerName'), 'calico-rr1')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "name": "[variables('targetVnetName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('targetVnetIpPrefix')]"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/{1}', variables('targetVnetName'), 'default')]",
      "properties": {
        "addressPrefix": "[parameters('targetVnetIpPrefix')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('targetVnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/{1}', parameters('vnetName'), format('to-{0}', variables('targetVnetName')))]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "allowGatewayTransit": true,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('targetVnetName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('targetVnetName'))]",
        "[resourceId('Microsoft.Network/virtualHubs', variables('routeServerName'))]",
        "[resourceId('Microsoft.Network/virtualHubs/ipConfigurations', variables('routeServerName'), variables('ipconfigName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}/{1}', variables('targetVnetName'), format('to-{0}', parameters('vnetName')))]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": true,
        "allowGatewayTransit": false,
        "useRemoteGateways": true,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('targetVnetName'))]",
        "[resourceId('Microsoft.Network/virtualHubs', variables('routeServerName'))]",
        "[resourceId('Microsoft.Network/virtualHubs/ipConfigurations', variables('routeServerName'), variables('ipconfigName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-05-01",
      "name": "[variables('targetVMNsg')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-05-01",
      "name": "[format('{0}-{1}', variables('targetVM'), 'publicIP')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[variables('targetVMNic')]",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicip', variables('targetVM')))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('targetVnetName'), 'default')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('targetVMNsg'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('targetVnetName'), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('targetVMNsg'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-publicip', variables('targetVM')))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[variables('targetVM')]",
      "location": "[variables('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[format('{0}_disk1', variables('targetVM'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "diskSizeGB": 30
          }
        },
        "osProfile": {
          "computerName": "[variables('targetVM')]",
          "adminUsername": "mazdak",
          "adminPassword": "ChangePa$$w0rd24",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true
          },
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('targetVMNic'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('targetVMNic'))]"
      ]
    }
  ]
}
